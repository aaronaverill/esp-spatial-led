const fs = require('fs')

const assetsFolder = 'assets'
const contentFolder = 'src/Web/UI/Content'

console.log('Bundling web assets...')

if (!fs.existsSync(contentFolder)){
  fs.mkdirSync(contentFolder);
}

bundleHtml(`${assetsFolder}/html/index.html`, `${contentFolder}/index_html.h`, 'index_html')
bundleCss(`${assetsFolder}/css/app.css`, `${contentFolder}/app_css.h`, 'app_css')
bundleJs(`${assetsFolder}/js/app.js`, `${contentFolder}/app_js.h`, 'app_js')

function bundleHtml(source, destination, variableName) {
  console.info(`Processing file ${source}`)
  let content = fs.readFileSync(source)
  bundleRawString(source, content, destination, variableName)
}

function bundleCss(source, destination, variableName) {
  console.info(`Processing ${source}`)
  let content = fs.readFileSync(source)
  bundleRawString(source, content, destination, variableName)
}

function bundleJs(source, destination, variableName) {
  console.info(`Processing ${source}`)
  let content = fs.readFileSync(source)
  bundleRawString(source, content, destination, variableName)
}

function bundleRawString(source, value, destination, variableName) {
  content = `
// File autogenerated from ${source} by build/webbundle.js. 
// Do not edit.

#include <Arduino.h>

const char ${variableName}[] PROGMEM = R"rawstring(
${value}
)rawstring";
`
  writeFile(content, destination)
}

function writeFile(content, destination) {
  console.info(` - Writing ${destination}`)
  fs.writeFileSync(destination, content)
}